#All scopes are country scope
#All parameters are optional
estate_mages_battlemages = {
	icon = privilege_spawn_rajput_regiments
	land_share = -15
	max_absolutism = 0
	influence = 0.3
	can_select = { }
	on_granted = { }
	modifier_by_land_ownership = {
		allowed_rajput_fraction = 0.1
	}
	penalties = { }
	benefits = { 
		allowed_rajput_fraction = 0.1
	}
	mechanics = {
		enables_rajput_regiments
	}
	ai_will_do = {
		factor = 10
	}
}

court_wizards = {
	icon = privilege_court_wizards
	max_absolutism = 0	#Change in max absolutism while this privilege is enacted
	loyalty = 0.1	#Change in percent loyalty caused by this privilege
	influence = 0.1	#Change in percent influence caused by this privilege
	#Conditions for whether it is possible for the country to have this privilege
	is_valid = {
		always = yes
	}
	#Conditions for whether the country is allowed to select the privilege
	can_select = {
		estate_loyalty = {
			estate = estate_mages
			loyalty = 35
		}
	}
	#Effects executed immediately upon the privilege being taken
	on_granted = {
	}
	#Conditions for whether the country can revoke the privilege
	can_revoke = {
	}
	#Effects executed upon the privilege being revoked by the country
	on_revoked = {
	}
	#Effects executed upon the privilege being removed due to invalidity
	on_invalid = {
	}
	#Negative modifiers granted while the privilege is active
	penalties = {
		advisor_cost = 0.05
	}
	#Positive modifiers granted while the privilege is active
	benefits = {
		advisor_pool = 1
		global_institution_spread = 0.15
	}
	# conditional_modifier = {
	# 	#Modifier that are applied if the specified conditions are true.
	# 	trigger = {
	# 		<triggers>
	# 	}
	# 	modifier = {
	# 		<modifiers>
	# 	}
	# 	is_bad = <bool>		#yes/no. Whether the modifier should be listed as positive or negative in the tooltips.
	# }
	modifier_by_land_ownership = {
	}
	#Multiplies the modifier by the % of land owned by the estate.
	# mechanics = {
	# 	<mechanics>
	# }	#Special mechanics the privilege enables
	cooldown_years = 5	#Time limit before which the privilege cannot be revoked
	on_cooldown_expires = {
	}
	#Effect executed once the specified cooldown_years timer has run down
	ai_will_do = {
		#If above ESTATE_PRIVILEGE_GRANT_THRESHOLD define, AI will try to apply. If below 
		factor = 1		#ESTATE_PRIVILEGE_REVOKE_THRESHOLD, AI will try to revoke.
	}
}

battle_mages = {
	icon = privilege_battle_mages
	max_absolutism = -5	#Change in max absolutism while this privilege is enacted
	loyalty = 0	#Change in percent loyalty caused by this privilege
	influence = 0.1	#Change in percent influence caused by this privilege
	#Conditions for whether it is possible for the country to have this privilege
	is_valid = {
		always = yes
	}
	#Conditions for whether the country is allowed to select the privilege
	can_select = {
		estate_loyalty = {
			estate = estate_mages
			loyalty = 35
		}
	}
	#Effects executed immediately upon the privilege being taken
	on_granted = {
		add_adm_power = -25
	}
	#Conditions for whether the country can revoke the privilege
	can_revoke = {
	}
	#Effects executed upon the privilege being revoked by the country
	on_revoked = {
	}
	#Effects executed upon the privilege being removed due to invalidity
	on_invalid = {
	}
	#Negative modifiers granted while the privilege is active
	penalties = {
		global_tax_modifier = -0.1
	}
	#Positive modifiers granted while the privilege is active
	benefits = {
		fire_damage = 0.1
		fire_damage_received = -0.1
	}
	# conditional_modifier = {
	# 	#Modifier that are applied if the specified conditions are true.
	# 	trigger = {
	# 		<triggers>
	# 	}
	# 	modifier = {
	# 		<modifiers>
	# 	}
	# 	is_bad = <bool>		#yes/no. Whether the modifier should be listed as positive or negative in the tooltips.
	# }
	modifier_by_land_ownership = {
	}
	#Multiplies the modifier by the % of land owned by the estate.
	# mechanics = {
	# 	<mechanics>
	# }	#Special mechanics the privilege enables
	cooldown_years = 5	#Time limit before which the privilege cannot be revoked
	on_cooldown_expires = {
	}
	#Effect executed once the specified cooldown_years timer has run down
	ai_will_do = {
		#If above ESTATE_PRIVILEGE_GRANT_THRESHOLD define, AI will try to apply. If below 
		factor = 1		#ESTATE_PRIVILEGE_REVOKE_THRESHOLD, AI will try to revoke.
	}
}

state_sponsored_apprenticeships = {
	icon = privilege_state_sponsored_apprenticeships
	max_absolutism = -5	#Change in max absolutism while this privilege is enacted
	loyalty = 0.1	#Change in percent loyalty caused by this privilege
	influence = 0	#Change in percent influence caused by this privilege
	#Conditions for whether it is possible for the country to have this privilege
	is_valid = {
		always = yes
	}
	#Conditions for whether the country is allowed to select the privilege
	can_select = {
		always = yes
	}
	#Effects executed immediately upon the privilege being taken
	on_granted = {
		add_adm_power = -100
	}
	#Conditions for whether the country can revoke the privilege
	can_revoke = {
	}
	#Effects executed upon the privilege being revoked by the country
	on_revoked = {
	}
	#Effects executed upon the privilege being removed due to invalidity
	on_invalid = {
	}
	#Negative modifiers granted while the privilege is active
	penalties = {
		global_tax_modifier = -0.1
	}
	#Positive modifiers granted while the privilege is active
	benefits = {
		advisor_cost = -0.15
	}
	# conditional_modifier = {
	# 	#Modifier that are applied if the specified conditions are true.
	# 	trigger = {
	# 		<triggers>
	# 	}
	# 	modifier = {
	# 		<modifiers>
	# 	}
	# 	is_bad = <bool>		#yes/no. Whether the modifier should be listed as positive or negative in the tooltips.
	# }
	modifier_by_land_ownership = {
	}
	#Multiplies the modifier by the % of land owned by the estate.
	# mechanics = {
	# 	<mechanics>
	# }	#Special mechanics the privilege enables
	cooldown_years = 5	#Time limit before which the privilege cannot be revoked
	on_cooldown_expires = {
	}
	#Effect executed once the specified cooldown_years timer has run down
	ai_will_do = {
		#If above ESTATE_PRIVILEGE_GRANT_THRESHOLD define, AI will try to apply. If below 
		factor = 1		#ESTATE_PRIVILEGE_REVOKE_THRESHOLD, AI will try to revoke.
	}
}

mages_colleges = {
	icon = privilege_mages_colleges
	max_absolutism = 0	#Change in max absolutism while this privilege is enacted
	loyalty = 0.1	#Change in percent loyalty caused by this privilege
	influence = 0	#Change in percent influence caused by this privilege
	#Conditions for whether it is possible for the country to have this privilege
	is_valid = {
		always = yes
	}
	#Conditions for whether the country is allowed to select the privilege
	can_select = {
		always = yes
	}
	#Effects executed immediately upon the privilege being taken
	on_granted = {
		add_years_of_income = -1.5
	}
	#Conditions for whether the country can revoke the privilege
	can_revoke = {
		NOT = {
			has_estate_privilege = mages_council
		}
	}
	#Effects executed upon the privilege being revoked by the country
	on_revoked = {
	}
	#Effects executed upon the privilege being removed due to invalidity
	on_invalid = {
	}
	#Negative modifiers granted while the privilege is active
	penalties = {
		administrative_efficiency = -0.05
	}
	#Positive modifiers granted while the privilege is active
	benefits = {
		idea_cost = -0.05
	}
	# conditional_modifier = {
	# 	#Modifier that are applied if the specified conditions are true.
	# 	trigger = {
	# 		<triggers>
	# 	}
	# 	modifier = {
	# 		<modifiers>
	# 	}
	# 	is_bad = <bool>		#yes/no. Whether the modifier should be listed as positive or negative in the tooltips.
	# }
	modifier_by_land_ownership = {
	}
	#Multiplies the modifier by the % of land owned by the estate.
	# mechanics = {
	# 	<mechanics>
	# }	#Special mechanics the privilege enables
	cooldown_years = 5	#Time limit before which the privilege cannot be revoked
	on_cooldown_expires = {
	}
	#Effect executed once the specified cooldown_years timer has run down
	ai_will_do = {
		#If above ESTATE_PRIVILEGE_GRANT_THRESHOLD define, AI will try to apply. If below 
		factor = 1		#ESTATE_PRIVILEGE_REVOKE_THRESHOLD, AI will try to revoke.
	}
}

mages_council = {
	icon = privilege_mages_council
	max_absolutism = -5	#Change in max absolutism while this privilege is enacted
	loyalty = 0.15	#Change in percent loyalty caused by this privilege
	influence = 0.25	#Change in percent influence caused by this privilege
	#Conditions for whether it is possible for the country to have this privilege
	is_valid = {
	}
	#Conditions for whether the country is allowed to select the privilege
	can_select = {
		has_estate_privilege = mages_colleges
	}
	#Effects executed immediately upon the privilege being taken
	on_granted = {
	}
	#Conditions for whether the country can revoke the privilege
	can_revoke = {
	}
	#Effects executed upon the privilege being revoked by the country
	on_revoked = {
		add_estate_loyalty = {
			estate = estate_mages
			loyalty = -0.35
		}
	}
	#Effects executed upon the privilege being removed due to invalidity
	on_invalid = {
	}
	#Negative modifiers granted while the privilege is active
	penalties = {
	}
	#Positive modifiers granted while the privilege is active
	benefits = {
	}
	# conditional_modifier = {
	# 	#Modifier that are applied if the specified conditions are true.
	# 	trigger = {
	# 		<triggers>
	# 	}
	# 	modifier = {
	# 		<modifiers>
	# 	}
	# 	is_bad = <bool>		#yes/no. Whether the modifier should be listed as positive or negative in the tooltips.
	# }
	modifier_by_land_ownership = {
		state_maintenance_modifier = -0.15
	}
	#Multiplies the modifier by the % of land owned by the estate.
	mechanics = {
		can_give_agendas_without_interaction
	}
	#Special mechanics the privilege enables
	cooldown_years = 5	#Time limit before which the privilege cannot be revoked
	on_cooldown_expires = {
	}
	#Effect executed once the specified cooldown_years timer has run down
	ai_will_do = {
		#If above ESTATE_PRIVILEGE_GRANT_THRESHOLD define, AI will try to apply. If below 
		factor = 1		#ESTATE_PRIVILEGE_REVOKE_THRESHOLD, AI will try to revoke.
	}
}
