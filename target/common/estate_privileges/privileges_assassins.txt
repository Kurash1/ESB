#All scopes are country scope
#All parameters are optional
donate_safehouses = {
	icon = privilege_donate_safehouses
	max_absolutism = 0	#Change in max absolutism while this privilege is enacted
	loyalty = 0.1	#Change in percent loyalty caused by this privilege
	influence = -0.15	#Change in percent influence caused by this privilege
	#Conditions for whether it is possible for the country to have this privilege
	is_valid = {
		always = yes
	}
	#Conditions for whether the country is allowed to select the privilege
	can_select = {
		years_of_income = 0.5
	}
	#Effects executed immediately upon the privilege being taken
	on_granted = {
		add_years_of_income = -0.5
		change_estate_land_share = {
			estate = estate_assassins
			share = 5
		}
		change_estate_land_share = {
			estate = estate_dark_brotherhood
			share = 5
		}
		change_estate_land_share = {
			estate = estate_morag_tong
			share = 5
		}
	}
	#Conditions for whether the country can revoke the privilege
	can_revoke = {
		NOT = {
			OR = {
				if = {
					limit = {
						has_estate = estate_morag_tong
					}
					estate_influence = {
						estate = estate_morag_tong
						influence = 50
					}
				}
				if = {
					limit = {
						has_estate = estate_assassins
					}
					estate_influence = {
						estate = estate_assassins
						influence = 50
					}
				}
				if = {
					limit = {
						has_estate = estate_dark_brotherhood
					}
					estate_influence = {
						estate = estate_dark_brotherhood
						influence = 50
					}
				}
			}
		}
	}
	#Effects executed upon the privilege being revoked by the country
	on_revoked = {
	}
	#Effects executed upon the privilege being removed due to invalidity
	on_invalid = {
	}
	#Negative modifiers granted while the privilege is active
	penalties = {
	}
	#Positive modifiers granted while the privilege is active
	benefits = {
	}
	# conditional_modifier = {
	# 	#Modifier that are applied if the specified conditions are true.
	# 	trigger = {
	# 		<triggers>
	# 	}
	# 	modifier = {
	# 		<modifiers>
	# 	}
	# 	is_bad = <bool>		#yes/no. Whether the modifier should be listed as positive or negative in the tooltips.
	# }
	modifier_by_land_ownership = {
	}
	#Multiplies the modifier by the % of land owned by the estate.
	# mechanics = {
	# 	<mechanics>
	# }	#Special mechanics the privilege enables
	cooldown_years = 1	#Time limit before which the privilege cannot be revoked
	on_cooldown_expires = {
	}
	#Effect executed once the specified cooldown_years timer has run down
	ai_will_do = {
		#If above ESTATE_PRIVILEGE_GRANT_THRESHOLD define, AI will try to apply. If below 
		factor = 1		#ESTATE_PRIVILEGE_REVOKE_THRESHOLD, AI will try to revoke.
	}
}

wartime_assassination = {
	icon = privilege_wartime_assassination
	max_absolutism = 0	#Change in max absolutism while this privilege is enacted
	loyalty = 0	#Change in percent loyalty caused by this privilege
	influence = 0.05	#Change in percent influence caused by this privilege
	#Conditions for whether it is possible for the country to have this privilege
	is_valid = {
		always = yes
	}
	#Conditions for whether the country is allowed to select the privilege
	can_select = {
		is_at_war = yes
		years_of_income = 0.5
	}
	#Effects executed immediately upon the privilege being taken
	on_granted = {
		add_years_of_income = -0.5
		custom_tooltip = wartime_assassination_tooltip
		hidden_effect = {
			country_event = {
				id = es_estate_assassins.1
				days = 30
				random = 15
			}
		}
	}
	#Conditions for whether the country can revoke the privilege
	can_revoke = {
		always = no
	}
	#Effects executed upon the privilege being revoked by the country
	on_revoked = {
	}
	#Effects executed upon the privilege being removed due to invalidity
	on_invalid = {
	}
	#Negative modifiers granted while the privilege is active
	penalties = {
	}
	#Positive modifiers granted while the privilege is active
	benefits = {
	}
	# conditional_modifier = {
	# 	#Modifier that are applied if the specified conditions are true.
	# 	trigger = {
	# 		<triggers>
	# 	}
	# 	modifier = {
	# 		<modifiers>
	# 	}
	# 	is_bad = <bool>		#yes/no. Whether the modifier should be listed as positive or negative in the tooltips.
	# }
	modifier_by_land_ownership = {
	}
	#Multiplies the modifier by the % of land owned by the estate.
	# mechanics = {
	# 	<mechanics>
	# }	#Special mechanics the privilege enables
	cooldown_years = 1	#Time limit before which the privilege cannot be revoked
	on_cooldown_expires = {
		remove_estate_privilege = wartime_assassination
	}
	#Effect executed once the specified cooldown_years timer has run down
	ai_will_do = {
		#If above ESTATE_PRIVILEGE_GRANT_THRESHOLD define, AI will try to apply. If below 
		factor = 1		#ESTATE_PRIVILEGE_REVOKE_THRESHOLD, AI will try to revoke.
	}
}
