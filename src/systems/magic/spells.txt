new named_int current_spell_position_x = 0
new named_int current_spell_position_y = 0
new class spell = {
	list = spells
	args = {
		name = string
		type = string #will be made an enum later
		cost = float
		on_cast = named_effect
	}
	on_create = {
		interface_files:countrytechnologyview:countrytechnologyview += {
			iconType = {
				name = `custom_mechanic_spell_background_{this:id}`
				position = { x = 10 y = (150 + current_spell_position_y * 37) }
				quadTextureSprite = `"GFX_spell_type_background_{this:type}"`
				scripted = yes
			}
			guiButtonType = {
				name = `custom_mechanic_spell_{this:id}`
				position = { x = 17 y = (156 + current_spell_position_y * 37) }
				quadTextureSprite = `"GFX_spells_{this:id}"`
				scripted = yes
			}
			instantTextBoxType = {
				name = `custom_mechanic_spell_name_{this:id}`
				position = { x = (10+59+5) y = (150 + 8 + current_spell_position_y * 37) }
				maxWidth = 175
				maxHeight = 20
				scripted = yes
			}
			instantTextBoxType = {
				name = `custom_mechanic_spell_type_{this:id}`
				position = { x = (10+59+5+2) y = (150 + 29 + current_spell_position_y * 37) }
				maxWidth = 115
				maxHeight = 20
				scripted = yes
			}
			instantTextBoxType = {
				name = `custom_mechanic_spell_cost_{this:id}`
				position = { x = (10+59+5) y = (150 + 29 + current_spell_position_y * 37) }
				format = right
				maxWidth = 170
				maxHeight = 20
				scripted = yes
			}
		}
		
		new custom_icon `custom_mechanic_spell_background_{this:id}` = {
			potential = {
				has_country_flag = show_magic_menu
			}
		}
		new custom_text_box `custom_mechanic_spell_name_{this:id}` = {
			potential = {
				has_country_flag = show_magic_menu
			}
			name = this:name
		}
		new custom_text_box `custom_mechanic_spell_type_{this:id}` = {
			potential = {
				has_country_flag = show_magic_menu
			}
			name = `{id_to_name = this:type}`
			tooltip = `This spell is of §Y{id_to_name = this:type}§!`
		}
		new custom_text_box `custom_mechanic_spell_cost_{this:id}` = {
			potential = {
				has_country_flag = show_magic_menu
			}
			name = `{this:cost}£magicka_icon£`
			tooltip = `This spell costs {this:cost}£magicka_icon£ to cast`
		}
		new custom_button `custom_mechanic_spell_{this:id}` = {
			tooltip = "{this:name}
-------------
This spell costs §Y{this:cost}§! Magicka to cast. This cost is further modified by:
	Spell cost modifier: §Y[spell_cost_modifier_percent.GetValue]%§!"
			potential = {
				has_country_flag = show_magic_menu
			}
			trigger =* {
				variable_arithmetic_trigger = {
					custom_tooltip = "Have enough magicka to cast this spell."
					&this_spell_cost &= modifier:spell_cost_modifier
					&this_spell_cost *= *this:cost*
					
					&magicka >= this_spell_cost
				}
			}
			effect =* {
				hidden_effect = {
					add_magicka = -*this:cost*
				}
				*this:on_cast*
			}
		}
		
		current_spell_position_y += 1
	}
}
new spell cast_shields = {
	name = "Cast Shields"
	type = country
	cost = 50
	on_cast = {
		quick_country_modifier = {
			name = "Shield Spells"
			years = 10
			modifier = {
				fire_damage_received = -0.1
				shock_damage_received = -0.1
			}
		}
	}
}