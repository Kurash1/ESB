#All scopes are country scope
#All parameters are optional
mandatory_service = {
	icon = privilege_mandatory_service
	max_absolutism = 0	#Change in max absolutism while this privilege is enacted
	loyalty = -0.15	#Change in percent loyalty caused by this privilege
	influence = 0.1	#Change in percent influence caused by this privilege
	#Conditions for whether it is possible for the country to have this privilege
	is_valid = {
		always = yes
	}
	#Conditions for whether the country is allowed to select the privilege
	can_select = {
	}
	#Effects executed immediately upon the privilege being taken
	on_granted = {
	}
	#Conditions for whether the country can revoke the privilege
	can_revoke = {
	}
	#Effects executed upon the privilege being revoked by the country
	on_revoked = {
	}
	#Effects executed upon the privilege being removed due to invalidity
	on_invalid = {
	}
	#Negative modifiers granted while the privilege is active
	penalties = {
		discipline = -0.015
	}
	#Positive modifiers granted while the privilege is active
	benefits = {
		army_tradition_decay = -0.025
	}
	# conditional_modifier = {
	# 	#Modifier that are applied if the specified conditions are true.
	# 	trigger = {
	# 		<triggers>
	# 	}
	# 	modifier = {
	# 		<modifiers>
	# 	}
	# 	is_bad = <bool>		#yes/no. Whether the modifier should be listed as positive or negative in the tooltips.
	# }
	modifier_by_land_ownership = {
	}
	#Multiplies the modifier by the % of land owned by the estate.
	mechanics = {
	}
	#Special mechanics the privilege enables
	cooldown_years = 5	#Time limit before which the privilege cannot be revoked
	on_cooldown_expires = {
	}
	#Effect executed once the specified cooldown_years timer has run down
	ai_will_do = {
		#If above ESTATE_PRIVILEGE_GRANT_THRESHOLD define, AI will try to apply. If below 
		factor = 1		#ESTATE_PRIVILEGE_REVOKE_THRESHOLD, AI will try to revoke.
	}
}

indentured_servitude = {
	icon = privilege_indentured_servitude
	max_absolutism = 0	#Change in max absolutism while this privilege is enacted
	loyalty = -0.05	#Change in percent loyalty caused by this privilege
	influence = -0.1	#Change in percent influence caused by this privilege
	#Conditions for whether it is possible for the country to have this privilege
	is_valid = {
		always = yes
	}
	#Conditions for whether the country is allowed to select the privilege
	can_select = {
	}
	#Effects executed immediately upon the privilege being taken
	on_granted = {
	}
	#Conditions for whether the country can revoke the privilege
	can_revoke = {
	}
	#Effects executed upon the privilege being revoked by the country
	on_revoked = {
	}
	#Effects executed upon the privilege being removed due to invalidity
	on_invalid = {
	}
	#Negative modifiers granted while the privilege is active
	penalties = {
		monthly_reform_progress_modifier = -0.05
	}
	#Positive modifiers granted while the privilege is active
	benefits = {
		inflation_reduction = -0.01
	}
	# conditional_modifier = {
	# 	#Modifier that are applied if the specified conditions are true.
	# 	trigger = {
	# 		<triggers>
	# 	}
	# 	modifier = {
	# 		<modifiers>
	# 	}
	# 	is_bad = <bool>		#yes/no. Whether the modifier should be listed as positive or negative in the tooltips.
	# }
	modifier_by_land_ownership = {
	}
	#Multiplies the modifier by the % of land owned by the estate.
	mechanics = {
	}
	#Special mechanics the privilege enables
	cooldown_years = 5	#Time limit before which the privilege cannot be revoked
	on_cooldown_expires = {
	}
	#Effect executed once the specified cooldown_years timer has run down
	ai_will_do = {
		#If above ESTATE_PRIVILEGE_GRANT_THRESHOLD define, AI will try to apply. If below 
		factor = 1		#ESTATE_PRIVILEGE_REVOKE_THRESHOLD, AI will try to revoke.
	}
}

corvee_labour = {
	icon = privilege_corvee_labour
	max_absolutism = 5	#Change in max absolutism while this privilege is enacted
	loyalty = -0.15	#Change in percent loyalty caused by this privilege
	influence = -0.1	#Change in percent influence caused by this privilege
	#Conditions for whether it is possible for the country to have this privilege
	is_valid = {
		always = yes
	}
	#Conditions for whether the country is allowed to select the privilege
	can_select = {
	}
	#Effects executed immediately upon the privilege being taken
	on_granted = {
	}
	#Conditions for whether the country can revoke the privilege
	can_revoke = {
	}
	#Effects executed upon the privilege being revoked by the country
	on_revoked = {
	}
	#Effects executed upon the privilege being removed due to invalidity
	on_invalid = {
	}
	#Negative modifiers granted while the privilege is active
	penalties = {
	}
	#Positive modifiers granted while the privilege is active
	benefits = {
		build_cost = -0.2
	}
	# conditional_modifier = {
	# 	#Modifier that are applied if the specified conditions are true.
	# 	trigger = {
	# 		<triggers>
	# 	}
	# 	modifier = {
	# 		<modifiers>
	# 	}
	# 	is_bad = <bool>		#yes/no. Whether the modifier should be listed as positive or negative in the tooltips.
	# }
	modifier_by_land_ownership = {
		global_unrest = 15
		development_cost = -0.33
	}
	#Multiplies the modifier by the % of land owned by the estate.
	mechanics = {
	}
	#Special mechanics the privilege enables
	cooldown_years = 5	#Time limit before which the privilege cannot be revoked
	on_cooldown_expires = {
	}
	#Effect executed once the specified cooldown_years timer has run down
	ai_will_do = {
		#If above ESTATE_PRIVILEGE_GRANT_THRESHOLD define, AI will try to apply. If below 
		factor = 1		#ESTATE_PRIVILEGE_REVOKE_THRESHOLD, AI will try to revoke.
	}
}

privilege_press_gangs = {
	icon = privilege_press_gangs
	max_absolutism = 5	#Change in max absolutism while this privilege is enacted
	loyalty = -0.15	#Change in percent loyalty caused by this privilege
	influence = -0.1	#Change in percent influence caused by this privilege
	#Conditions for whether it is possible for the country to have this privilege
	is_valid = {
		always = yes
	}
	#Conditions for whether the country is allowed to select the privilege
	can_select = {
		num_of_total_ports = 1
	}
	#Effects executed immediately upon the privilege being taken
	on_granted = {
	}
	#Conditions for whether the country can revoke the privilege
	can_revoke = {
	}
	#Effects executed upon the privilege being revoked by the country
	on_revoked = {
	}
	#Effects executed upon the privilege being removed due to invalidity
	on_invalid = {
	}
	#Negative modifiers granted while the privilege is active
	penalties = {
		production_efficiency = -0.05
	}
	#Positive modifiers granted while the privilege is active
	benefits = {
		global_sailors_modifier = 0.15
	}
	# conditional_modifier = {
	# 	#Modifier that are applied if the specified conditions are true.
	# 	trigger = {
	# 		<triggers>
	# 	}
	# 	modifier = {
	# 		<modifiers>
	# 	}
	# 	is_bad = <bool>		#yes/no. Whether the modifier should be listed as positive or negative in the tooltips.
	# }
	modifier_by_land_ownership = {
	}
	#Multiplies the modifier by the % of land owned by the estate.
	mechanics = {
	}
	#Special mechanics the privilege enables
	cooldown_years = 5	#Time limit before which the privilege cannot be revoked
	on_cooldown_expires = {
	}
	#Effect executed once the specified cooldown_years timer has run down
	ai_will_do = {
		#If above ESTATE_PRIVILEGE_GRANT_THRESHOLD define, AI will try to apply. If below 
		factor = 1		#ESTATE_PRIVILEGE_REVOKE_THRESHOLD, AI will try to revoke.
	}
}

bread = {
	icon = privilege_bread
	max_absolutism = 0	#Change in max absolutism while this privilege is enacted
	loyalty = 0.1	#Change in percent loyalty caused by this privilege
	influence = 0	#Change in percent influence caused by this privilege
	#Conditions for whether it is possible for the country to have this privilege
	is_valid = {
		always = yes
	}
	#Conditions for whether the country is allowed to select the privilege
	can_select = {
	}
	#Effects executed immediately upon the privilege being taken
	on_granted = {
	}
	#Conditions for whether the country can revoke the privilege
	can_revoke = {
	}
	#Effects executed upon the privilege being revoked by the country
	on_revoked = {
		random_province = {
			spawn_rebels = {
				size = 2
				type = anti_tax_rebels
			}
		}
		random_province = {
			spawn_rebels = {
				size = 2
				type = anti_tax_rebels
			}
		}
	}
	#Effects executed upon the privilege being removed due to invalidity
	on_invalid = {
	}
	#Negative modifiers granted while the privilege is active
	penalties = {
		global_tax_modifier = -0.1
	}
	#Positive modifiers granted while the privilege is active
	benefits = {
		manpower_recovery_speed = 0.15
	}
	# conditional_modifier = {
	# 	#Modifier that are applied if the specified conditions are true.
	# 	trigger = {
	# 		<triggers>
	# 	}
	# 	modifier = {
	# 		<modifiers>
	# 	}
	# 	is_bad = <bool>		#yes/no. Whether the modifier should be listed as positive or negative in the tooltips.
	# }
	modifier_by_land_ownership = {
	}
	#Multiplies the modifier by the % of land owned by the estate.
	mechanics = {
	}
	#Special mechanics the privilege enables
	cooldown_years = 5	#Time limit before which the privilege cannot be revoked
	on_cooldown_expires = {
	}
	#Effect executed once the specified cooldown_years timer has run down
	ai_will_do = {
		#If above ESTATE_PRIVILEGE_GRANT_THRESHOLD define, AI will try to apply. If below 
		factor = 1		#ESTATE_PRIVILEGE_REVOKE_THRESHOLD, AI will try to revoke.
	}
}
circuses = {
	icon = privilege_circuses
	max_absolutism = 5	#Change in max absolutism while this privilege is enacted
	loyalty = 0.1	#Change in percent loyalty caused by this privilege
	influence = 0.05	#Change in percent influence caused by this privilege
	#Conditions for whether it is possible for the country to have this privilege
	is_valid = {
		always = yes
	}
	#Conditions for whether the country is allowed to select the privilege
	can_select = {
		NOT = {
			government = tribal
		}
		OR = {
			had_country_flag = {
				flag = circuses_cooldown
				days = 1095
			}
			NOT = {
				has_country_flag = circuses_cooldown
			}
		}
	}
	#Effects executed immediately upon the privilege being taken
	on_granted = {
		clr_country_flag = circuses_cooldown
		add_treasury = -500
		add_prestige = 10
		hidden_effect = {
			random_list = {
				10 = {
					# Riots at the games
				}
				90 = {
					random_list = {
						50 = {
							# A foreign champion wins
						}
						50 = {
							# A local champion wins
						}
					}
				}
			}
		}
	}
	#Conditions for whether the country can revoke the privilege
	can_revoke = {
	}
	#Effects executed upon the privilege being revoked by the country
	on_revoked = {
	}
	#Effects executed upon the privilege being removed due to invalidity
	on_invalid = {
	}
	#Negative modifiers granted while the privilege is active
	penalties = {
		global_tax_modifier = -0.15
	}
	#Positive modifiers granted while the privilege is active
	benefits = {
		global_unrest = -5
		prestige = 0.5
	}
	# conditional_modifier = {
	# 	#Modifier that are applied if the specified conditions are true.
	# 	trigger = {
	# 		<triggers>
	# 	}
	# 	modifier = {
	# 		<modifiers>
	# 	}
	# 	is_bad = <bool>		#yes/no. Whether the modifier should be listed as positive or negative in the tooltips.
	# }
	modifier_by_land_ownership = {
	}
	#Multiplies the modifier by the % of land owned by the estate.
	mechanics = {
	}
	#Special mechanics the privilege enables
	cooldown_years = 1	#Time limit before which the privilege cannot be revoked
	on_cooldown_expires = {
		remove_estate_privilege = circuses
		set_country_flag = circuses_cooldown
	}
	#Effect executed once the specified cooldown_years timer has run down
	ai_will_do = {
		#If above ESTATE_PRIVILEGE_GRANT_THRESHOLD define, AI will try to apply. If below 
		factor = 1		#ESTATE_PRIVILEGE_REVOKE_THRESHOLD, AI will try to revoke.
	}
}
integrate_aldermen = {
	icon = privilege_integrate_aldermen
	max_absolutism = -10	#Change in max absolutism while this privilege is enacted
	loyalty = 0.15	#Change in percent loyalty caused by this privilege
	influence = 0.15	#Change in percent influence caused by this privilege
	#Conditions for whether it is possible for the country to have this privilege
	is_valid = {
		always = yes
	}
	#Conditions for whether the country is allowed to select the privilege
	can_select = {
		always = yes
	}
	#Effects executed immediately upon the privilege being taken
	on_granted = {
	}
	#Conditions for whether the country can revoke the privilege
	can_revoke = {
	}
	#Effects executed upon the privilege being revoked by the country
	on_revoked = {
	}
	#Effects executed upon the privilege being removed due to invalidity
	on_invalid = {
	}
	#Negative modifiers granted while the privilege is active
	penalties = {
	}
	#Positive modifiers granted while the privilege is active
	benefits = {
	}
	# conditional_modifier = {
	# 	#Modifier that are applied if the specified conditions are true.
	# 	trigger = {
	# 		<triggers>
	# 	}
	# 	modifier = {
	# 		<modifiers>
	# 	}
	# 	is_bad = <bool>		#yes/no. Whether the modifier should be listed as positive or negative in the tooltips.
	# }
	modifier_by_land_ownership = {
		global_unrest = -15
	}
	#Multiplies the modifier by the % of land owned by the estate.
	mechanics = {
		can_give_agendas_without_interaction
	}
	#Special mechanics the privilege enables
	cooldown_years = 1	#Time limit before which the privilege cannot be revoked
	on_cooldown_expires = {
		remove_estate_privilege = circuses
		set_country_flag = circuses_cooldown
	}
	#Effect executed once the specified cooldown_years timer has run down
	ai_will_do = {
		#If above ESTATE_PRIVILEGE_GRANT_THRESHOLD define, AI will try to apply. If below 
		factor = 1		#ESTATE_PRIVILEGE_REVOKE_THRESHOLD, AI will try to revoke.
	}
}
recruit_brigands = {
	icon = privilege_recruit_brigands
	max_absolutism = -5	#Change in max absolutism while this privilege is enacted
	loyalty = 0.0	#Change in percent loyalty caused by this privilege
	influence = 0.15	#Change in percent influence caused by this privilege
	#Conditions for whether it is possible for the country to have this privilege
	is_valid = {
		always = yes
	}
	#Conditions for whether the country is allowed to select the privilege
	can_select = {
		always = yes
	}
	#Effects executed immediately upon the privilege being taken
	on_granted = {
		add_prestige = -10
	}
	#Conditions for whether the country can revoke the privilege
	can_revoke = {
	}
	#Effects executed upon the privilege being revoked by the country
	on_revoked = {
	}
	#Effects executed upon the privilege being removed due to invalidity
	on_invalid = {
	}
	#Negative modifiers granted while the privilege is active
	penalties = {
	}
	#Positive modifiers granted while the privilege is active
	benefits = {
		special_unit_forcelimit = 0.2
	}
	# conditional_modifier = {
	# 	#Modifier that are applied if the specified conditions are true.
	# 	trigger = {
	# 		<triggers>
	# 	}
	# 	modifier = {
	# 		<modifiers>
	# 	}
	# 	is_bad = <bool>		#yes/no. Whether the modifier should be listed as positive or negative in the tooltips.
	# }
	modifier_by_land_ownership = {

	}
	#Multiplies the modifier by the % of land owned by the estate.
	mechanics = {
		enables_cossack_regiments
	}
	#Special mechanics the privilege enables
	cooldown_years = 5	#Time limit before which the privilege cannot be revoked
	on_cooldown_expires = {
	}
	#Effect executed once the specified cooldown_years timer has run down
	ai_will_do = {
		#If above ESTATE_PRIVILEGE_GRANT_THRESHOLD define, AI will try to apply. If below 
		factor = 1		#ESTATE_PRIVILEGE_REVOKE_THRESHOLD, AI will try to revoke.
	}
}