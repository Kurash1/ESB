#All scopes are country scope
#All parameters are optional
encourage_patronage = {
	icon = privilege_encourage_patronage
	max_absolutism = 0	#Change in max absolutism while this privilege is enacted
	loyalty = 0.05	#Change in percent loyalty caused by this privilege
	influence = 0.05	#Change in percent influence caused by this privilege
	#Conditions for whether it is possible for the country to have this privilege
	is_valid = {
		always = yes
	}
	#Conditions for whether the country is allowed to select the privilege
	can_select = {
	}
	#Effects executed immediately upon the privilege being taken
	on_granted = {
	}
	#Conditions for whether the country can revoke the privilege
	can_revoke = {
	}
	#Effects executed upon the privilege being revoked by the country
	on_revoked = {
	}
	#Effects executed upon the privilege being removed due to invalidity
	on_invalid = {
	}
	#Negative modifiers granted while the privilege is active
	penalties = {
		same_culture_advisor_cost = 0.1
	}
	#Positive modifiers granted while the privilege is active
	benefits = {
		global_institution_spread = 0.15
		prestige_decay = -0.01
	}
	# conditional_modifier = {
	# 	#Modifier that are applied if the specified conditions are true.
	# 	trigger = {
	# 		<triggers>
	# 	}
	# 	modifier = {
	# 		<modifiers>
	# 	}
	# 	is_bad = <bool>		#yes/no. Whether the modifier should be listed as positive or negative in the tooltips.
	# }
	modifier_by_land_ownership = {
	}
	#Multiplies the modifier by the % of land owned by the estate.
	mechanics = {
	}
	#Special mechanics the privilege enables
	cooldown_years = 5	#Time limit before which the privilege cannot be revoked
	on_cooldown_expires = {
	}
	#Effect executed once the specified cooldown_years timer has run down
	ai_will_do = {
		#If above ESTATE_PRIVILEGE_GRANT_THRESHOLD define, AI will try to apply. If below 
		factor = 1		#ESTATE_PRIVILEGE_REVOKE_THRESHOLD, AI will try to revoke.
	}
}
recruit_officers = {
	icon = privilege_recruit_officers
	max_absolutism = 5	#Change in max absolutism while this privilege is enacted
	loyalty = 0.15	#Change in percent loyalty caused by this privilege
	influence = 0.15	#Change in percent influence caused by this privilege
	#Conditions for whether it is possible for the country to have this privilege
	is_valid = {
		always = yes
	}
	#Conditions for whether the country is allowed to select the privilege
	can_select = {
	}
	#Effects executed immediately upon the privilege being taken
	on_granted = {
		add_army_tradition = 10
	}
	#Conditions for whether the country can revoke the privilege
	can_revoke = {
	}
	#Effects executed upon the privilege being revoked by the country
	on_revoked = {
	}
	#Effects executed upon the privilege being removed due to invalidity
	on_invalid = {
	}
	#Negative modifiers granted while the privilege is active
	penalties = {
		leader_cost = 0.33
	}
	#Positive modifiers granted while the privilege is active
	benefits = {
		free_leader_pool = 1
	}
	# conditional_modifier = {
	# 	#Modifier that are applied if the specified conditions are true.
	# 	trigger = {
	# 		<triggers>
	# 	}
	# 	modifier = {
	# 		<modifiers>
	# 	}
	# 	is_bad = <bool>		#yes/no. Whether the modifier should be listed as positive or negative in the tooltips.
	# }
	modifier_by_land_ownership = {
	}
	#Multiplies the modifier by the % of land owned by the estate.
	mechanics = {
	}
	#Special mechanics the privilege enables
	cooldown_years = 5	#Time limit before which the privilege cannot be revoked
	on_cooldown_expires = {
	}
	#Effect executed once the specified cooldown_years timer has run down
	ai_will_do = {
		#If above ESTATE_PRIVILEGE_GRANT_THRESHOLD define, AI will try to apply. If below 
		factor = 1		#ESTATE_PRIVILEGE_REVOKE_THRESHOLD, AI will try to revoke.
	}
}
recruit_advisors = {
	icon = privilege_recruit_advisors
	max_absolutism = 5	#Change in max absolutism while this privilege is enacted
	loyalty = 0.15	#Change in percent loyalty caused by this privilege
	influence = 0.15	#Change in percent influence caused by this privilege
	#Conditions for whether it is possible for the country to have this privilege
	is_valid = {
		always = yes
	}
	#Conditions for whether the country is allowed to select the privilege
	can_select = {
	}
	#Effects executed immediately upon the privilege being taken
	on_granted = {
		
	}
	#Conditions for whether the country can revoke the privilege
	can_revoke = {
	}
	#Effects executed upon the privilege being revoked by the country
	on_revoked = {
	}
	#Effects executed upon the privilege being removed due to invalidity
	on_invalid = {
	}
	#Negative modifiers granted while the privilege is active
	penalties = {
		advisor_cost = 0.15
	}
	#Positive modifiers granted while the privilege is active
	benefits = {
		technology_cost = -0.05
		advisor_pool = 1
	}
	# conditional_modifier = {
	# 	#Modifier that are applied if the specified conditions are true.
	# 	trigger = {
	# 		<triggers>
	# 	}
	# 	modifier = {
	# 		<modifiers>
	# 	}
	# 	is_bad = <bool>		#yes/no. Whether the modifier should be listed as positive or negative in the tooltips.
	# }
	modifier_by_land_ownership = {
	}
	#Multiplies the modifier by the % of land owned by the estate.
	mechanics = {
	}
	#Special mechanics the privilege enables
	cooldown_years = 5	#Time limit before which the privilege cannot be revoked
	on_cooldown_expires = {
	}
	#Effect executed once the specified cooldown_years timer has run down
	ai_will_do = {
		#If above ESTATE_PRIVILEGE_GRANT_THRESHOLD define, AI will try to apply. If below 
		factor = 1		#ESTATE_PRIVILEGE_REVOKE_THRESHOLD, AI will try to revoke.
	}
}
grant_hunting_grounds = {
	icon = privilege_grant_hunting_grounds
	max_absolutism = 5	#Change in max absolutism while this privilege is enacted
	loyalty = 0.15	#Change in percent loyalty caused by this privilege
	influence = 0.05	#Change in percent influence caused by this privilege
	#Conditions for whether it is possible for the country to have this privilege
	is_valid = {
		always = yes
	}
	#Conditions for whether the country is allowed to select the privilege
	can_select = {
	}
	#Effects executed immediately upon the privilege being taken
	on_granted = {
		
	}
	#Conditions for whether the country can revoke the privilege
	can_revoke = {
	}
	#Effects executed upon the privilege being revoked by the country
	on_revoked = {
	}
	#Effects executed upon the privilege being removed due to invalidity
	on_invalid = {
	}
	#Negative modifiers granted while the privilege is active
	penalties = {
		production_efficiency = -0.15
	}
	#Positive modifiers granted while the privilege is active
	benefits = {
		shock_damage = 0.1
	}
	# conditional_modifier = {
	# 	#Modifier that are applied if the specified conditions are true.
	# 	trigger = {
	# 		<triggers>
	# 	}
	# 	modifier = {
	# 		<modifiers>
	# 	}
	# 	is_bad = <bool>		#yes/no. Whether the modifier should be listed as positive or negative in the tooltips.
	# }
	modifier_by_land_ownership = {
		global_unrest = 20
	}
	#Multiplies the modifier by the % of land owned by the estate.
	mechanics = {
	}
	#Special mechanics the privilege enables
	cooldown_years = 5	#Time limit before which the privilege cannot be revoked
	on_cooldown_expires = {
	}
	#Effect executed once the specified cooldown_years timer has run down
	ai_will_do = {
		#If above ESTATE_PRIVILEGE_GRANT_THRESHOLD define, AI will try to apply. If below 
		factor = 1		#ESTATE_PRIVILEGE_REVOKE_THRESHOLD, AI will try to revoke.
	}
}
nobility_elite_footmen = {
	icon = privilege_nobility_elite_footmen
	max_absolutism = 5	#Change in max absolutism while this privilege is enacted
	loyalty = 0.05	#Change in percent loyalty caused by this privilege
	influence = 0.1	#Change in percent influence caused by this privilege
	#Conditions for whether it is possible for the country to have this privilege
	is_valid = {
		always = yes
	}
	#Conditions for whether the country is allowed to select the privilege
	can_select = {
		NOT = {
			has_estate_privilege = nobility_elite_cavalry
		}
	}
	#Effects executed immediately upon the privilege being taken
	on_granted = {
		
	}
	#Conditions for whether the country can revoke the privilege
	can_revoke = {
	}
	#Effects executed upon the privilege being revoked by the country
	on_revoked = {
	}
	#Effects executed upon the privilege being removed due to invalidity
	on_invalid = {
	}
	#Negative modifiers granted while the privilege is active
	penalties = {
		infantry_cost = 0.15
	}
	#Positive modifiers granted while the privilege is active
	benefits = {
		infantry_fire = 0.1
		infantry_shock = 0.1
	}
	# conditional_modifier = {
	# 	#Modifier that are applied if the specified conditions are true.
	# 	trigger = {
	# 		<triggers>
	# 	}
	# 	modifier = {
	# 		<modifiers>
	# 	}
	# 	is_bad = <bool>		#yes/no. Whether the modifier should be listed as positive or negative in the tooltips.
	# }
	modifier_by_land_ownership = {

	}
	#Multiplies the modifier by the % of land owned by the estate.
	mechanics = {
	}
	#Special mechanics the privilege enables
	cooldown_years = 5	#Time limit before which the privilege cannot be revoked
	on_cooldown_expires = {
	}
	#Effect executed once the specified cooldown_years timer has run down
	ai_will_do = {
		#If above ESTATE_PRIVILEGE_GRANT_THRESHOLD define, AI will try to apply. If below 
		factor = 1		#ESTATE_PRIVILEGE_REVOKE_THRESHOLD, AI will try to revoke.
	}
}
nobility_elite_cavalry = {
	icon = privilege_nobility_elite_cavalry
	max_absolutism = 5	#Change in max absolutism while this privilege is enacted
	loyalty = 0.05	#Change in percent loyalty caused by this privilege
	influence = 0.1	#Change in percent influence caused by this privilege
	#Conditions for whether it is possible for the country to have this privilege
	is_valid = {
		always = yes
	}
	#Conditions for whether the country is allowed to select the privilege
	can_select = {
		NOT = {
			has_estate_privilege = nobility_elite_footmen
		}
	}
	#Effects executed immediately upon the privilege being taken
	on_granted = {
		
	}
	#Conditions for whether the country can revoke the privilege
	can_revoke = {
	}
	#Effects executed upon the privilege being revoked by the country
	on_revoked = {
	}
	#Effects executed upon the privilege being removed due to invalidity
	on_invalid = {
	}
	#Negative modifiers granted while the privilege is active
	penalties = {
		cavalry_cost = 0.35
	}
	#Positive modifiers granted while the privilege is active
	benefits = {
		cavalry_fire = 0.1
		cavalry_shock = 0.1
	}
	# conditional_modifier = {
	# 	#Modifier that are applied if the specified conditions are true.
	# 	trigger = {
	# 		<triggers>
	# 	}
	# 	modifier = {
	# 		<modifiers>
	# 	}
	# 	is_bad = <bool>		#yes/no. Whether the modifier should be listed as positive or negative in the tooltips.
	# }
	modifier_by_land_ownership = {

	}
	#Multiplies the modifier by the % of land owned by the estate.
	mechanics = {
	}
	#Special mechanics the privilege enables
	cooldown_years = 5	#Time limit before which the privilege cannot be revoked
	on_cooldown_expires = {
	}
	#Effect executed once the specified cooldown_years timer has run down
	ai_will_do = {
		#If above ESTATE_PRIVILEGE_GRANT_THRESHOLD define, AI will try to apply. If below 
		factor = 1		#ESTATE_PRIVILEGE_REVOKE_THRESHOLD, AI will try to revoke.
	}
}
noble_council = {
	icon = privilege_noble_council
	max_absolutism = -10	#Change in max absolutism while this privilege is enacted
	loyalty = 0.15	#Change in percent loyalty caused by this privilege
	influence = 0.15	#Change in percent influence caused by this privilege
	#Conditions for whether it is possible for the country to have this privilege
	is_valid = {
		always = yes
	}
	#Conditions for whether the country is allowed to select the privilege
	can_select = {

	}
	#Effects executed immediately upon the privilege being taken
	on_granted = {
		
	}
	#Conditions for whether the country can revoke the privilege
	can_revoke = {
	}
	#Effects executed upon the privilege being revoked by the country
	on_revoked = {
	}
	#Effects executed upon the privilege being removed due to invalidity
	on_invalid = {
	}
	#Negative modifiers granted while the privilege is active
	penalties = {
		
	}
	#Positive modifiers granted while the privilege is active
	benefits = {
		governing_capacity_modifier = 0.15
		state_maintenance_modifier = -0.1
	}
	# conditional_modifier = {
	# 	#Modifier that are applied if the specified conditions are true.
	# 	trigger = {
	# 		<triggers>
	# 	}
	# 	modifier = {
	# 		<modifiers>
	# 	}
	# 	is_bad = <bool>		#yes/no. Whether the modifier should be listed as positive or negative in the tooltips.
	# }
	modifier_by_land_ownership = {

	}
	#Multiplies the modifier by the % of land owned by the estate.
	mechanics = {
		can_give_agendas_without_interaction
	}
	#Special mechanics the privilege enables
	cooldown_years = 5	#Time limit before which the privilege cannot be revoked
	on_cooldown_expires = {
	}
	#Effect executed once the specified cooldown_years timer has run down
	ai_will_do = {
		#If above ESTATE_PRIVILEGE_GRANT_THRESHOLD define, AI will try to apply. If below 
		factor = 1		#ESTATE_PRIVILEGE_REVOKE_THRESHOLD, AI will try to revoke.
	}
}