#All scopes are country scope
#All parameters are optional
elite_entourage = {
	icon = privilege_elite_entourage
	max_absolutism = 5	#Change in max absolutism while this privilege is enacted
	loyalty = 0.1	#Change in percent loyalty caused by this privilege
	influence = 0.15	#Change in percent influence caused by this privilege
	#Conditions for whether it is possible for the country to have this privilege
	is_valid = {
		always = yes
	}
	#Conditions for whether the country is allowed to select the privilege
	can_select = {
	}
	#Effects executed immediately upon the privilege being taken
	on_granted = {
	}
	#Conditions for whether the country can revoke the privilege
	can_revoke = {
	}
	#Effects executed upon the privilege being revoked by the country
	on_revoked = {
	}
	#Effects executed upon the privilege being removed due to invalidity
	on_invalid = {
	}
	#Negative modifiers granted while the privilege is active
	penalties = {
		global_tax_modifier = -0.10
	}
	#Positive modifiers granted while the privilege is active
	benefits = {
		discipline = 0.025
		prestige = 0.5
		special_unit_forcelimit = 0.2
	}
	# conditional_modifier = {
	# 	#Modifier that are applied if the specified conditions are true.
	# 	trigger = {
	# 		<triggers>
	# 	}
	# 	modifier = {
	# 		<modifiers>
	# 	}
	# 	is_bad = <bool>		#yes/no. Whether the modifier should be listed as positive or negative in the tooltips.
	# }
	modifier_by_land_ownership = {
	}
	#Multiplies the modifier by the % of land owned by the estate.
	mechanics = {
		enables_rajput_regiments
	}
	#Special mechanics the privilege enables
	cooldown_years = 5	#Time limit before which the privilege cannot be revoked
	on_cooldown_expires = {
	}
	#Effect executed once the specified cooldown_years timer has run down
	ai_will_do = {
		#If above ESTATE_PRIVILEGE_GRANT_THRESHOLD define, AI will try to apply. If below 
		factor = 1		#ESTATE_PRIVILEGE_REVOKE_THRESHOLD, AI will try to revoke.
	}
}
give_gifts = {
	icon = privilege_give_gifts
	max_absolutism = -1	#Change in max absolutism while this privilege is enacted
	loyalty = 0.1	#Change in percent loyalty caused by this privilege
	influence = 0.1	#Change in percent influence caused by this privilege
	#Conditions for whether it is possible for the country to have this privilege
	is_valid = {
		has_estate_privilege = elite_entourage
	}
	#Effects executed immediately upon the privilege being taken
	on_granted = {
		# Basic effects, always happen
		add_years_of_income = -0.25
		set_ruler_flag = gave_warriors_gifts
		
		# Special effects which only happen the first and second time this privilige is given
		if = {
			limit = {
				NOT = { has_country_flag = warriors_expect_gifts }
			}
			# Second Time Effects
			if = {
				limit = {
					has_country_flag = gave_warriors_gifts_once
				}
				clr_country_flag = gave_warriors_gifts_once
				set_country_flag = warriors_expect_gifts
			}
			# First time effects
			else = {
				set_country_flag = gave_warriors_gifts_once
			}
		}
	}
	#Conditions for whether the country can revoke the privilege
	can_revoke = {
		always = no
	}
	#Effects executed upon the privilege being revoked by the country
	on_revoked = {
	}
	#Effects executed upon the privilege being removed due to invalidity
	on_invalid = {
	}
	#Negative modifiers granted while the privilege is active
	penalties = {
		
	}
	#Positive modifiers granted while the privilege is active
	benefits = {
		
	}
	# conditional_modifier = {
	# 	#Modifier that are applied if the specified conditions are true.
	# 	trigger = {
	# 		<triggers>
	# 	}
	# 	modifier = {
	# 		<modifiers>
	# 	}
	# 	is_bad = <bool>		#yes/no. Whether the modifier should be listed as positive or negative in the tooltips.
	# }
	modifier_by_land_ownership = {
		global_unrest = -20
	}
	#Multiplies the modifier by the % of land owned by the estate.
	mechanics = {
		#enables_rajput_regiments
	}
	#Special mechanics the privilege enables
	#cooldown_years = 5	#Time limit before which the privilege cannot be revoked
	#on_cooldown_expires = {
	#}
	#Effect executed once the specified cooldown_years timer has run down
	ai_will_do = {
		#If above ESTATE_PRIVILEGE_GRANT_THRESHOLD define, AI will try to apply. If below 
		factor = 1		#ESTATE_PRIVILEGE_REVOKE_THRESHOLD, AI will try to revoke.
	}
}
regulate_arms = {
	icon = privilege_regulate_arms
	max_absolutism = 5	#Change in max absolutism while this privilege is enacted
	loyalty = 0.1	#Change in percent loyalty caused by this privilege
	influence = 0.15	#Change in percent influence caused by this privilege
	#Conditions for whether it is possible for the country to have this privilege
	is_valid = {
		always = yes
	}
	#Conditions for whether the country is allowed to select the privilege
	can_select = {
	}
	#Effects executed immediately upon the privilege being taken
	on_granted = {
		
	}
	#Conditions for whether the country can revoke the privilege
	can_revoke = {
	}
	#Effects executed upon the privilege being revoked by the country
	on_revoked = {
	}
	#Effects executed upon the privilege being removed due to invalidity
	on_invalid = {
	}
	#Negative modifiers granted while the privilege is active
	penalties = {
		global_manpower_modifier = -0.33
	}
	#Positive modifiers granted while the privilege is active
	benefits = {
		shock_damage = 0.1
		fire_damage = 0.1
	}
	# conditional_modifier = {
	# 	#Modifier that are applied if the specified conditions are true.
	# 	trigger = {
	# 		<triggers>
	# 	}
	# 	modifier = {
	# 		<modifiers>
	# 	}
	# 	is_bad = <bool>		#yes/no. Whether the modifier should be listed as positive or negative in the tooltips.
	# }
	modifier_by_land_ownership = {
	}
	#Multiplies the modifier by the % of land owned by the estate.
	mechanics = {
		#enables_rajput_regiments
	}
	#Special mechanics the privilege enables
	cooldown_years = 5	#Time limit before which the privilege cannot be revoked
	on_cooldown_expires = {
	}
	#Effect executed once the specified cooldown_years timer has run down
	ai_will_do = {
		#If above ESTATE_PRIVILEGE_GRANT_THRESHOLD define, AI will try to apply. If below 
		factor = 1		#ESTATE_PRIVILEGE_REVOKE_THRESHOLD, AI will try to revoke.
	}
}
prefer_auxiliaries = {
	icon = privilege_prefer_auxiliaries
	max_absolutism = 5	#Change in max absolutism while this privilege is enacted
	loyalty = -0.1	#Change in percent loyalty caused by this privilege
	influence = -0.15	#Change in percent influence caused by this privilege
	#Conditions for whether it is possible for the country to have this privilege
	is_valid = {
		always = yes
	}
	#Conditions for whether the country is allowed to select the privilege
	can_select = {
	}
	#Effects executed immediately upon the privilege being taken
	on_granted = {
		
	}
	#Conditions for whether the country can revoke the privilege
	can_revoke = {
	}
	#Effects executed upon the privilege being revoked by the country
	on_revoked = {
	}
	#Effects executed upon the privilege being removed due to invalidity
	on_invalid = {
	}
	#Negative modifiers granted while the privilege is active
	penalties = {
		global_manpower_modifier = -0.5
	}
	#Positive modifiers granted while the privilege is active
	benefits = {
		mercenary_cost = -0.33
		mercenary_manpower = 0.33
	}
	# conditional_modifier = {
	# 	#Modifier that are applied if the specified conditions are true.
	# 	trigger = {
	# 		<triggers>
	# 	}
	# 	modifier = {
	# 		<modifiers>
	# 	}
	# 	is_bad = <bool>		#yes/no. Whether the modifier should be listed as positive or negative in the tooltips.
	# }
	modifier_by_land_ownership = {
	}
	#Multiplies the modifier by the % of land owned by the estate.
	mechanics = {
		#enables_rajput_regiments
	}
	#Special mechanics the privilege enables
	cooldown_years = 5	#Time limit before which the privilege cannot be revoked
	on_cooldown_expires = {
	}
	#Effect executed once the specified cooldown_years timer has run down
	ai_will_do = {
		#If above ESTATE_PRIVILEGE_GRANT_THRESHOLD define, AI will try to apply. If below 
		factor = 1		#ESTATE_PRIVILEGE_REVOKE_THRESHOLD, AI will try to revoke.
	}
}
engineering_corps = {
	icon = privilege_engineering_corps
	max_absolutism = 0	#Change in max absolutism while this privilege is enacted
	loyalty = 0	#Change in percent loyalty caused by this privilege
	influence = 0.1	#Change in percent influence caused by this privilege
	#Conditions for whether it is possible for the country to have this privilege
	is_valid = {
		always = yes
	}
	#Conditions for whether the country is allowed to select the privilege
	can_select = {
	}
	#Effects executed immediately upon the privilege being taken
	on_granted = {
		
	}
	#Conditions for whether the country can revoke the privilege
	can_revoke = {
	}
	#Effects executed upon the privilege being revoked by the country
	on_revoked = {
	}
	#Effects executed upon the privilege being removed due to invalidity
	on_invalid = {
	}
	#Negative modifiers granted while the privilege is active
	penalties = {
		land_maintenance_modifier = 0.1
	}
	#Positive modifiers granted while the privilege is active
	benefits = {
		build_cost = -0.15
		build_time = -0.15
	}
	# conditional_modifier = {
	# 	#Modifier that are applied if the specified conditions are true.
	# 	trigger = {
	# 		<triggers>
	# 	}
	# 	modifier = {
	# 		<modifiers>
	# 	}
	# 	is_bad = <bool>		#yes/no. Whether the modifier should be listed as positive or negative in the tooltips.
	# }
	modifier_by_land_ownership = {
	}
	#Multiplies the modifier by the % of land owned by the estate.
	mechanics = {
		#enables_rajput_regiments
	}
	#Special mechanics the privilege enables
	cooldown_years = 5	#Time limit before which the privilege cannot be revoked
	on_cooldown_expires = {
	}
	#Effect executed once the specified cooldown_years timer has run down
	ai_will_do = {
		#If above ESTATE_PRIVILEGE_GRANT_THRESHOLD define, AI will try to apply. If below 
		factor = 1		#ESTATE_PRIVILEGE_REVOKE_THRESHOLD, AI will try to revoke.
	}
}
caravan_guards = {
	icon = privilege_caravan_guards
	max_absolutism = 0	#Change in max absolutism while this privilege is enacted
	loyalty = 0	#Change in percent loyalty caused by this privilege
	influence = 0.1	#Change in percent influence caused by this privilege
	#Conditions for whether it is possible for the country to have this privilege
	is_valid = {
		always = yes
	}
	#Conditions for whether the country is allowed to select the privilege
	can_select = {
	}
	#Effects executed immediately upon the privilege being taken
	on_granted = {
		
	}
	#Conditions for whether the country can revoke the privilege
	can_revoke = {
	}
	#Effects executed upon the privilege being revoked by the country
	on_revoked = {
	}
	#Effects executed upon the privilege being removed due to invalidity
	on_invalid = {
	}
	#Negative modifiers granted while the privilege is active
	penalties = {
		manpower_recovery_speed = -0.2
	}
	#Positive modifiers granted while the privilege is active
	benefits = {
		discipline = 0.025
		caravan_power = 0.25
	}
	# conditional_modifier = {
	# 	#Modifier that are applied if the specified conditions are true.
	# 	trigger = {
	# 		<triggers>
	# 	}
	# 	modifier = {
	# 		<modifiers>
	# 	}
	# 	is_bad = <bool>		#yes/no. Whether the modifier should be listed as positive or negative in the tooltips.
	# }
	modifier_by_land_ownership = {
	}
	#Multiplies the modifier by the % of land owned by the estate.
	mechanics = {
		#enables_rajput_regiments
	}
	#Special mechanics the privilege enables
	cooldown_years = 5	#Time limit before which the privilege cannot be revoked
	on_cooldown_expires = {
	}
	#Effect executed once the specified cooldown_years timer has run down
	ai_will_do = {
		#If above ESTATE_PRIVILEGE_GRANT_THRESHOLD define, AI will try to apply. If below 
		factor = 1		#ESTATE_PRIVILEGE_REVOKE_THRESHOLD, AI will try to revoke.
	}
}
host_tournaments = {
	icon = privilege_host_tournaments
	max_absolutism = 5	#Change in max absolutism while this privilege is enacted
	loyalty = 0.1	#Change in percent loyalty caused by this privilege
	influence = 0	#Change in percent influence caused by this privilege
	#Conditions for whether it is possible for the country to have this privilege
	is_valid = {
		
	}
	#Conditions for whether the country is allowed to select the privilege
	can_select = {
		years_of_income = 1.75
		NOT = {
			has_estate_privilege = host_tournaments
		}
	}
	#Effects executed immediately upon the privilege being taken
	on_granted = {
		add_years_of_income = -1.5
		# Maybe an event for the first tournament?
	}
	#Conditions for whether the country can revoke the privilege
	can_revoke = {
	}
	#Effects executed upon the privilege being revoked by the country
	on_revoked = {
	}
	#Effects executed upon the privilege being removed due to invalidity
	on_invalid = {
	}
	#Negative modifiers granted while the privilege is active
	penalties = {
		global_tax_modifier = -0.075
	}
	#Positive modifiers granted while the privilege is active
	benefits = {
		global_unrest = -2.5
		army_tradition = 0.25
		land_morale = 0.05
	}
	# conditional_modifier = {
	# 	#Modifier that are applied if the specified conditions are true.
	# 	trigger = {
	# 		<triggers>
	# 	}
	# 	modifier = {
	# 		<modifiers>
	# 	}
	# 	is_bad = <bool>		#yes/no. Whether the modifier should be listed as positive or negative in the tooltips.
	# }
	modifier_by_land_ownership = {
	}
	#Multiplies the modifier by the % of land owned by the estate.
	mechanics = {

	}
	#Special mechanics the privilege enables
	cooldown_years = 5	#Time limit before which the privilege cannot be revoked
	on_cooldown_expires = {
	}
	#Effect executed once the specified cooldown_years timer has run down
	ai_will_do = {
		#If above ESTATE_PRIVILEGE_GRANT_THRESHOLD define, AI will try to apply. If below 
		factor = 1		#ESTATE_PRIVILEGE_REVOKE_THRESHOLD, AI will try to revoke.
	}
}